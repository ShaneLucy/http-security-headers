{"version":3,"file":"worker.js","mappings":";;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AAEA;;;;;AACA;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;AAEA;;;;;;;;;;;;;ACjCA;AAcA;;;;AAIA;AACA;AACA;;;;AAIA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvBA;AAEA;AACA;AACA","sources":["webpack://security-headers/./src/AttributeRewriter.ts","webpack://security-headers/./src/requestHandler.ts","webpack://security-headers/./src/setSecurityHeaders.ts","webpack://security-headers/webpack/bootstrap","webpack://security-headers/./src/index.ts"],"sourcesContent":["export default class AttributeRewriter {\n  private nonce: string;\n\n  constructor(nonce: string) {\n    this.nonce = nonce;\n  }\n\n  element(element: Element) {\n    element.setAttribute(\"nonce\", this.nonce);\n    element.setAttribute(\"type\", \"module\");\n  }\n}\n","import AttributeRewriter from \"./AttributeRewriter\";\nimport setSecurityHeaders from \"./setSecurityHeaders\";\n\nexport default async (request: any): Promise<Response> => {\n  const RESPONSE = await fetch(request);\n  const NEW_HEADERS = new Headers(RESPONSE.headers);\n  const NONCE = crypto.randomUUID();\n  const BLOCKED_HEADERS = [\"Public-Key-Pins\", \"X-Powered-By\", \"X-AspNet-Version\"];\n  const SECURITY_HEADERS = setSecurityHeaders(NONCE);\n\n  if (!NEW_HEADERS.get(\"Content-Type\")?.includes(\"text/html\")) {\n    return new Response(RESPONSE.body, {\n      status: RESPONSE.status,\n      statusText: RESPONSE.statusText,\n      headers: NEW_HEADERS,\n    });\n  }\n\n  Object.entries(SECURITY_HEADERS).forEach((entry: Array<string>) => {\n    NEW_HEADERS.set(entry[0], entry[1]);\n  });\n\n  BLOCKED_HEADERS.forEach((name) => {\n    NEW_HEADERS.delete(name);\n  });\n\n  return new HTMLRewriter().on(\"#bundle\", new AttributeRewriter(NONCE)).transform(\n    new Response(RESPONSE.body, {\n      status: RESPONSE.status,\n      statusText: RESPONSE.statusText,\n      headers: NEW_HEADERS,\n    })\n  );\n};\n","export default (\n  nonce: string\n): {\n  \"Content-Security-Policy\": string;\n  \"X-XSS-Protection\": string;\n  \"X-Frame-Options\": string;\n  \"X-Content-Type-Options\": string;\n  \"Referrer-Policy\": string;\n  \"Cross-Origin-Embedder-Policy\": string;\n  \"Cross-Origin-Opener-Policy\": string;\n  \"Cross-Origin-Resource-Policy\": string;\n  \"Strict-Transport-Security\": string;\n  \"Permissions-Policy\": string;\n} => ({\n  /**\n   * Secure your application with Content-Security-Policy headers.\n   * Enabling these headers will permit content from a trusted domain and all its subdomains.\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy\n   */\n  \"Content-Security-Policy\": `default-src 'none'; form-action 'self'; font-src 'self'; img-src 'self'; script-src 'unsafe-inline' https: 'strict-dynamic' 'nonce-${nonce}'; style-src 'self'; base-uri 'none'; frame-ancestors 'none'; connect-src 'self'`,\n  /**\n   * The HTTP Strict-Transport-Security informs browsers that the site should only be accessed using HTTPS.\n   * Any future attempts to access it using HTTP should automatically be converted to HTTPS.\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security\n   */\n  \"Strict-Transport-Security\": \"max-age=63072000; includeSubDomains; preload\",\n  /**\n   * Permissions-Policy header provides the ability to allow or deny the use of browser features, such as opting out of FLoC.\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy\n   */\n  \"Permissions-Policy\": \"interest-cohort=()\",\n  /**\n   * X-XSS-Protection header prevents a page from loading if an XSS attack is detected.\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection\n   */\n  \"X-XSS-Protection\": \"0\",\n  /**\n   * X-Frame-Options header prevents click-jacking attacks.\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options\n   */\n  \"X-Frame-Options\": \"DENY\",\n  /**\n   * X-Content-Type-Options header prevents MIME-sniffing.\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options\n   */\n  \"X-Content-Type-Options\": \"nosniff\",\n  /**\n   * Referrer-Policy HTTP header controls how much referrer information (sent with the Referer header) should be included with requests.\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy\n   */\n  \"Referrer-Policy\": \"strict-origin-when-cross-origin\",\n  /**\n   * Cross-Origin-Embedder-Policy prevents a document from loading any cross-origin resources,\n   * that don't explicitly grant the document permission (using CORP or CORS).\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy\n   */\n  \"Cross-Origin-Embedder-Policy\": 'require-corp; report-to=\"default\";',\n  /**\n   * Cross-Origin-Opener-Policy allows you to ensure a top-level document does not share a browsing context group with cross-origin documents.\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy\n   */\n  \"Cross-Origin-Opener-Policy\": 'same-site; report-to=\"default\";',\n  /**\n   * Cross-Origin-Resource-Policy conveys a desire that the browser blocks no-cors cross-origin/cross-site requests to the given resource.\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Resource-Policy\n   */\n  \"Cross-Origin-Resource-Policy\": \"same-site\",\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import handleRequest from \"./requestHandler\";\n\naddEventListener(\"fetch\", (event) => {\n  event.respondWith(handleRequest(event.request));\n});\n"],"names":[],"sourceRoot":""}